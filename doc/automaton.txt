digraph finite_state_machine {
	rankdir=LR;
	size="18"
	node [shape = doublecircle]; start endAggregate;
	node [shape = circle];
	start -> start [ label = "spc" ];
	start -> startObject [ label = "{ - SO" ];
	startObject -> startObject [ label = "spc" ];
	startObject -> endAggregate [ label = "} - EO" ];
	startObject -> stringValue [ label = "\" - name" ];
	stringValue -> stringEscape [ label = "\\" ];
	stringValue -> endValue [ label = "\" - V unless name" ];
	stringValue -> stringValue [ label = "rest" ];
	stringEscape -> stringValue [ label = "/\\\"bfnrt" ];
	stringEscape -> unicodeChar [ label = "u" ];
	unicodeChar -> unicodeChar [ label = "0-9a-Fa-F" ];
	unicodeChar -> stringValue [ label = "0-9a-Fa-F and 4ch" ];
	startValue -> startValue [ label = "spc" ];
	startValue -> startObject [ label = "{ - SO" ];
	startValue -> startValue [ label = "[ - SA" ];
	startValue -> endAggregate [ label = "] - EA" ];
	startValue -> stringValue [ label = "\"" ];
	startValue -> negativeNumber [ label = "-" ];
	startValue -> startFractionalNumber [ label = "0" ];
	startValue -> startNumber [ label = "1-9" ];
	startValue -> nullValue_ull [ label = "n" ];
	startValue -> trueValue_rue [ label = "t" ];
	startValue -> falseValue_alse [ label = "f" ];
	endValue -> endValue [ label = "spc" ];
	endValue -> startValue [ label = ": and name" ];
	endValue -> startValue [ label = ", and ! name" ];
	endValue -> endAggregate [ label = "} - EO" ];
	endValue -> endAggregate [ label = "] - EA" ];
	negativeNumber -> startFractionalNumber [ label = "0" ];
	negativeNumber -> numberValue [ label = "1-9" ];
	startFractionalNumber -> endValue [ label = "spc - V" ];
	startFractionalNumber -> startValue [ label = ", - V" ];
	startFractionalNumber -> numberValue [ label = ". - afterDot" ];
	startFractionalNumber -> endAggregate [ label = "} - V,EO" ];
	startFractionalNumber -> endAggregate [ label = "] - V,EA" ];
	numberValue -> endValue [ label = "spc - V" ];
	numberValue -> startValue [ label = ", - V" ];
	numberValue -> endAggregate [ label = "} - V,EO" ];
	numberValue -> endAggregate [ label = "] - V,EA" ];
	numberValue -> numberValue [ label = "0-9" ];
	numberValue -> numberValue [ label = ". and ! afterDot - afterDot" ];
	numberValue -> numberE [ label = "eE and ! numberE - numberE" ];
	numberE -> exponentialNumber [ label = "+-" ];
	numberE -> numberValue [ label = "0-9" ];
	exponentialNumber -> numberValue [ label = "0-9" ];
	nullValue_ull -> nullValue_ll [ label = "u" ];
	nullValue_ll -> nullValue_l [ label = "l" ];
	nullValue_l -> endValue [ label = "l - V" ];
	trueValue_rue -> trueValue_ue [ label = "r" ];
	trueValue_ue -> trueValue_e [ label = "u" ];
	trueValue_e -> endValue [ label = "e - V" ];
	falseValue_alse -> falseValue_lse [ label = "a" ];
	falseValue_lse -> falseValue_se [ label = "l" ];
	falseValue_se -> falseValue_e [ label = "s" ];
	falseValue_e -> endValue [ label = "e" ];
	endAggregate -> endAggregate [ label = "spc" ];
	endAggregate -> endAggregate [ label = "} - EO" ];
	endAggregate -> endAggregate [ label = "] - EA" ];
	endAggregate -> startValue [ label = ", unless no object" ];
}